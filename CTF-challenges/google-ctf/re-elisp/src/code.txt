;; Copyright 2018 Google LLC
;; 
;; Licensed under the Apache License, Version 2.0 (the "License");
;; you may not use this file except in compliance with the License.
;; You may obtain a copy of the License at
;; 
;;     https://www.apache.org/licenses/LICENSE-2.0
;; 
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.

(s mix (make-vector 91 0))~start~

;; FIRST LOOP
(s i 0)~l1s~
(ji (>= i 91) l1e)~l1s~
(lc newpos (+ i $perm1$))
(lc char (+ i $flag$))

(s case (+ (* 2 (% newpos 2)) (% i 2)))
(ji (= case 1) type1A)
(ji (= case 2) type2A)
(ji (= case 3) type3A)

;; type == 0
(s char (logxor char 66))
(j contA)
;; type == 1
(s char (% (+ char 123) 256))~type1A~
(j contA)
;; type == 2
(s char (% (+ (lognot char) 256) 256))~type2A~
(j contA)
;; type == 3
(s char (logior (lsh char -4) (lsh (logand char #x0f) 4)))~type3A~

(si mix newpos char)~contA~

(s i (1+ i))
(j l1s)


;; SECOND LOOP
(s i 0)~l1e~
(ji (>= i 91) l2e)~l2s~
(lc newpos (+ i $perm2$))
(li char mix i)

(s case (+ (* 2 (% newpos 2)) (% i 2)))
(ji (= case 1) type1B)
(ji (= case 2) type2B)
(ji (= case 3) type3B)

;; type == 0
(s char (% (+ char 66) 256))
(j contB)
;; type == 1
(s char (% (+ (lognot char) 256) 256))~type1B~
(j contB)
;; type == 2
(s char (logior (lsh char -6) (lsh (logand char #x3f) 2)))~type2B~
(j contB)
;; type == 3
(s char (logxor char 123))~type3B~

(lc comp (+ newpos $check_buf$))~contB~
(ji (/= comp char) fail)

(s i (1+ i))
(j l2s)

(p "That's not the correct flag :C")~fail~
(p "Yaay, you got it! :)")~l2e~
