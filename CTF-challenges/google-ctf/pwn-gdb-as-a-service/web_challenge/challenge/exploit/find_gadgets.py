#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import re
import capstone
import sys

addr = int(sys.argv[1], 0)
patterns = sys.argv[2:]
#pattern = '|'.join(map(lambda p: '({})'.format(p), sys.argv[2:]))
data = open('./libc-2.27.so').read()

capstone_md = capstone.Cs(capstone.CS_ARCH_X86, capstone.CS_MODE_64)

while patterns and addr < len(data):
  try:
    disasm = capstone_md.disasm_lite(data[addr:addr+16], addr).next()
    address, size, mnemonic, op_str = disasm
    asm_str = '{} {}'.format(mnemonic, op_str)
    if re.search(patterns[0], asm_str):
      print '0x{:08x}: {}'.format(address, asm_str)
      patterns = patterns[1:]
  except StopIteration:
    pass
  addr += 1
